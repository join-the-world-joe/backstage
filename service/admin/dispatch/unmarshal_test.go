package dispatch

import (
	"backstage/common/payload"
	"backstage/common/protocol/admin"
	"encoding/json"
	"testing"
)

func TestInsertRecordOfAdvertisement(t *testing.T) {
	packet := &payload.PacketClient{}
	req := &admin.InsertRecordOfAdvertisementReq{}
	temp := []byte{123, 34, 104, 101, 97, 100, 101, 114, 34, 58, 123, 34, 109, 97, 106, 111, 114, 34, 58, 34, 53, 34, 44, 34, 109, 105, 110, 111, 114, 34, 58, 34, 50, 57, 34, 125, 44, 34, 98, 111, 100, 121, 34, 58, 123, 34, 110, 97, 109, 101, 34, 58, 91, 52, 57, 93, 44, 34, 116, 105, 116, 108, 101, 34, 58, 91, 93, 44, 34, 115, 101, 108, 108, 105, 110, 103, 95, 112, 111, 105, 110, 116, 115, 34, 58, 91, 93, 44, 34, 115, 101, 108, 108, 105, 110, 103, 95, 112, 114, 105, 99, 101, 34, 58, 49, 48, 44, 34, 99, 111, 118, 101, 114, 95, 105, 109, 97, 103, 101, 34, 58, 91, 49, 50, 51, 44, 51, 52, 44, 49, 49, 57, 44, 49, 48, 53, 44, 49, 48, 48, 44, 49, 49, 54, 44, 49, 48, 52, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 53, 49, 44, 52, 56, 44, 52, 56, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 48, 52, 44, 49, 48, 49, 44, 49, 48, 53, 44, 49, 48, 51, 44, 49, 48, 52, 44, 49, 49, 54, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 52, 57, 44, 53, 52, 44, 53, 54, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 49, 55, 44, 49, 49, 52, 44, 49, 48, 56, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 49, 49, 44, 57, 56, 44, 49, 48, 54, 44, 49, 48, 49, 44, 57, 57, 44, 49, 49, 54, 44, 57, 53, 44, 49, 48, 50, 44, 49, 48, 53, 44, 49, 48, 56, 44, 49, 48, 49, 44, 57, 53, 44, 49, 49, 48, 44, 57, 55, 44, 49, 48, 57, 44, 49, 48, 49, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 49, 48, 50, 44, 49, 48, 49, 44, 53, 55, 44, 53, 49, 44, 53, 51, 44, 53, 52, 44, 53, 49, 44, 49, 48, 50, 44, 52, 53, 44, 52, 57, 44, 53, 49, 44, 53, 48, 44, 52, 57, 44, 52, 53, 44, 53, 50, 44, 49, 48, 49, 44, 53, 53, 44, 53, 48, 44, 52, 53, 44, 53, 55, 44, 52, 56, 44, 53, 51, 44, 49, 48, 48, 44, 52, 53, 44, 53, 51, 44, 53, 53, 44, 53, 54, 44, 49, 48, 49, 44, 52, 57, 44, 53, 53, 44, 53, 52, 44, 57, 56, 44, 53, 48, 44, 53, 55, 44, 53, 52, 44, 57, 55, 44, 52, 55, 44, 52, 56, 44, 52, 53, 44, 52, 57, 44, 53, 53, 44, 52, 56, 44, 53, 50, 44, 53, 49, 44, 53, 48, 44, 53, 54, 44, 52, 56, 44, 53, 53, 44, 52, 56, 44, 52, 54, 44, 49, 48, 54, 44, 49, 49, 50, 44, 49, 48, 51, 44, 51, 52, 44, 49, 50, 53, 93, 44, 34, 102, 105, 114, 115, 116, 95, 105, 109, 97, 103, 101, 34, 58, 91, 49, 50, 51, 44, 51, 52, 44, 49, 49, 57, 44, 49, 48, 53, 44, 49, 48, 48, 44, 49, 49, 54, 44, 49, 48, 52, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 53, 48, 44, 53, 48, 44, 53, 55, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 48, 52, 44, 49, 48, 49, 44, 49, 48, 53, 44, 49, 48, 51, 44, 49, 48, 52, 44, 49, 49, 54, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 53, 48, 44, 53, 48, 44, 52, 56, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 49, 55, 44, 49, 49, 52, 44, 49, 48, 56, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 51, 52, 44, 52, 52, 44, 51, 52, 44, 49, 49, 49, 44, 57, 56, 44, 49, 48, 54, 44, 49, 48, 49, 44, 57, 57, 44, 49, 49, 54, 44, 57, 53, 44, 49, 48, 50, 44, 49, 48, 53, 44, 49, 48, 56, 44, 49, 48, 49, 44, 57, 53, 44, 49, 49, 48, 44, 57, 55, 44, 49, 48, 57, 44, 49, 48, 49, 44, 51, 52, 44, 53, 56, 44, 51, 52, 44, 49, 48, 50, 44, 49, 48, 49, 44, 53, 55, 44, 53, 49, 44, 53, 51, 44, 53, 52, 44, 53, 49, 44, 49, 48, 50, 44, 52, 53, 44, 52, 57, 44, 53, 49, 44, 53, 48, 44, 52, 57, 44, 52, 53, 44, 53, 50, 44, 49, 48, 49, 44, 53, 53, 44, 53, 48, 44, 52, 53, 44, 53, 55, 44, 52, 56, 44, 53, 51, 44, 49, 48, 48, 44, 52, 53, 44, 53, 51, 44, 53, 53, 44, 53, 54, 44, 49, 48, 49, 44, 52, 57, 44, 53, 53, 44, 53, 52, 44, 57, 56, 44, 53, 48, 44, 53, 55, 44, 53, 52, 44, 57, 55, 44, 52, 55, 44, 52, 57, 44, 52, 53, 44, 52, 57, 44, 53, 53, 44, 52, 56, 44, 53, 50, 44, 53, 49, 44, 53, 48, 44, 53, 54, 44, 52, 56, 44, 53, 53, 44, 53, 50, 44, 52, 54, 44, 49, 48, 54, 44, 49, 49, 50, 44, 49, 48, 51, 44, 51, 52, 44, 49, 50, 53, 93, 44, 34, 115, 101, 99, 111, 110, 100, 95, 105, 109, 97, 103, 101, 34, 58, 91, 93, 44, 34, 116, 104, 105, 114, 100, 95, 105, 109, 97, 103, 101, 34, 58, 91, 93, 44, 34, 102, 111, 117, 114, 116, 104, 95, 105, 109, 97, 103, 101, 34, 58, 91, 93, 44, 34, 102, 105, 102, 116, 104, 95, 105, 109, 97, 103, 101, 34, 58, 91, 93, 44, 34, 112, 114, 111, 100, 117, 99, 116, 95, 105, 100, 34, 58, 49, 44, 34, 115, 116, 111, 99, 107, 34, 58, 49, 44, 34, 112, 108, 97, 99, 101, 95, 111, 102, 95, 111, 114, 105, 103, 105, 110, 34, 58, 91, 93, 44, 34, 111, 115, 115, 95, 112, 97, 116, 104, 34, 58, 34, 104, 116, 116, 112, 115, 58, 47, 47, 97, 100, 118, 101, 114, 116, 105, 115, 101, 109, 101, 110, 116, 45, 105, 109, 97, 103, 101, 46, 111, 115, 115, 45, 99, 110, 45, 115, 104, 101, 110, 122, 104, 101, 110, 46, 97, 108, 105, 121, 117, 110, 99, 115, 46, 99, 111, 109, 47, 34, 44, 34, 111, 115, 115, 95, 102, 111, 108, 100, 101, 114, 34, 58, 34, 102, 101, 57, 51, 53, 54, 51, 102, 45, 49, 51, 50, 49, 45, 52, 101, 55, 50, 45, 57, 48, 53, 100, 45, 53, 55, 56, 101, 49, 55, 54, 98, 50, 57, 54, 97, 34, 125, 125}
	err := json.Unmarshal(temp, packet)
	if err != nil {
		t.Fatal(err)
	}
	t.Log("packet: ", packet)
	err = json.Unmarshal(packet.GetBody(), req)
	if err != nil {
		t.Log("body: ", string(packet.GetBody()))
		t.Fatal(err)
	}
}

func TestPrint(t *testing.T) {
	temp := []byte{123,
		34,
		119,
		105,
		100,
		116,
		104,
		34,
		58,
		34,
		51,
		48,
		48,
		34,
		44,
		34,
		104,
		101,
		105,
		103,
		104,
		116,
		34,
		58,
		34,
		49,
		54,
		56,
		34,
		44,
		34,
		117,
		114,
		108,
		34,
		58,
		34,
		34,
		44,
		34,
		111,
		98,
		106,
		101,
		99,
		116,
		95,
		102,
		105,
		108,
		101,
		95,
		110,
		97,
		109,
		101,
		34,
		58,
		34,
		102,
		101,
		57,
		51,
		53,
		54,
		51,
		102,
		45,
		49,
		51,
		50,
		49,
		45,
		52,
		101,
		55,
		50,
		45,
		57,
		48,
		53,
		100,
		45,
		53,
		55,
		56,
		101,
		49,
		55,
		54,
		98,
		50,
		57,
		54,
		97,
		47,
		48,
		45,
		49,
		55,
		48,
		52,
		51,
		50,
		56,
		48,
		55,
		48,
		46,
		106,
		112,
		103,
		34,
		125}
	t.Log(string(temp))
}
